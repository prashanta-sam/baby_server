<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="8.2440" tests="11" failures="4">
  <testsuite name="Root Suite" timestamp="2023-02-25T10:13:17" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="products_api_medium" timestamp="2023-02-25T10:13:17" tests="11" file="/home/sam/Documents/interview/hackerrank_sqlite_crud_RESTapi/test/index.spec.js" time="8.2440" failures="4">
    <testcase name="products_api_medium should create a new product" time="0.0480" classname="should create a new product">
    </testcase>
    <testcase name="products_api_medium should create a new products without the published field" time="0.0050" classname="should create a new products without the published field">
    </testcase>
    <testcase name="products_api_medium should fetch all the products" time="0.0460" classname="should fetch all the products">
    </testcase>
    <testcase name="products_api_medium should fetch no products if there are not products stored" time="0.0080" classname="should fetch no products if there are not products stored">
    </testcase>
    <testcase name="products_api_medium should publish the product if all the constraints are met" time="2.0020" classname="should publish the product if all the constraints are met">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (/home/sam/Documents/interview/hackerrank_sqlite_crud_RESTapi/test/index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/home/sam/Documents/interview/hackerrank_sqlite_crud_RESTapi/test/index.spec.js)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)]]></failure>
    </testcase>
    <testcase name="products_api_medium should publish the product and the data should be updated in the DB" time="2.0020" classname="should publish the product and the data should be updated in the DB">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (/home/sam/Documents/interview/hackerrank_sqlite_crud_RESTapi/test/index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/home/sam/Documents/interview/hackerrank_sqlite_crud_RESTapi/test/index.spec.js)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)]]></failure>
    </testcase>
    <testcase name="products_api_medium should get 422 when MRP is less the price of the product" time="0.0570" classname="should get 422 when MRP is less the price of the product">
    </testcase>
    <testcase name="products_api_medium should get 422 when stock of the product is 0" time="0.0420" classname="should get 422 when stock of the product is 0">
    </testcase>
    <testcase name="products_api_medium should get 422 when both  MRP is less the price of the product and stock of the product is 0" time="0.0320" classname="should get 422 when both  MRP is less the price of the product and stock of the product is 0">
    </testcase>
    <testcase name="products_api_medium should get 405 for a put request to /products/:id" time="2.0020" classname="should get 405 for a put request to /products/:id">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (/home/sam/Documents/interview/hackerrank_sqlite_crud_RESTapi/test/index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/home/sam/Documents/interview/hackerrank_sqlite_crud_RESTapi/test/index.spec.js)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)]]></failure>
    </testcase>
    <testcase name="products_api_medium should get 405 for a delete request to /products/:id" time="2.0000" classname="should get 405 for a delete request to /products/:id">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (/home/sam/Documents/interview/hackerrank_sqlite_crud_RESTapi/test/index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/home/sam/Documents/interview/hackerrank_sqlite_crud_RESTapi/test/index.spec.js)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)]]></failure>
    </testcase>
  </testsuite>
</testsuites>